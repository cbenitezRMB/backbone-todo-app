var App=function(){"use strict";var a={Models:{},Collections:{},Views:{},Router:{},vent:{},config:{localStorageName:"todosTest1"},Utils:{getCurrentDateAndHour:function(){var a=new Date,b=a.getMinutes()<10?"0"+a.getMinutes():a.getMinutes();return a.toLocaleDateString()+", "+a.getHours()+":"+b}},userLang:"en",langs:{}};a.langs.es={days:["Domingo","Lunes","Martes","Miércoles","Jueves","Viernes","Sábado"],months:["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"],created:"Creado: ",modified:"Modificado: "},a.langs.en={days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],created:"Created: ",modified:"Modified: "},"es"===navigator.language&&(a.userLang=navigator.language);var b,c,d=function(a){var b="",c={classNames:"btn",id:"myButton",text:"Button",type:"button"},d=function(){return b='<button type="'+c.type+'" class="'+c.classNames+'" id="'+c.id+'">'+c.text+"</button>"};if(a)for(var e in a)c.hasOwnProperty(e)&&(c[e]=a[e]);return d()},e=function(a){var b={tag:"div",id:"",classes:""};if(a)for(var c in a)b.hasOwnProperty(c)&&(b[c]=a[c]);var d=function(){var a=$("<"+b.tag+"><"+b.tag+"/>").attr("id",b.id).addClass(b.classes);return a};return d()};if(a.vent=_.extend({},Backbone.Events),a.Router.Tasks=Backbone.Router.extend({routes:{"":"home",home:"home","task-details/":"home","task-details/:taskId":"showTaskDetails","*notFound":"home"},home:function(){a.vent.trigger("tasks-list"),a.vent.trigger("task-details:hide")},showTaskDetails:function(b){a.vent.trigger("task-details:show",b)}}),a.Models.Task=Backbone.Model.extend({defaults:{title:"No title",priority:0,done:!1,description:"No description added",creationDate:"",modificationDate:""},getCreationString:function(){return a.langs[a.userLang].created+""+this.get("creationDate")},getModificationString:function(){return""===this.get("modificationDate")?"":a.langs[a.userLang].modified+""+this.get("modificationDate")},url:"/data/tasks.json"}),a.Collections.Tasks=Backbone.Collection.extend({model:a.Models.Task,url:"data/tasks.json"}),a.Views.Task=Backbone.View.extend({tagName:"li",className:"col-sm-12",events:{"click #edit":"editTask","click #delete":"deleteTaskFromCollection",'click input[type="checkbox"]':"check"},template:"#individual-task",initialize:function(){this.listenTo(this.model,"change",this.render),this.listenTo(this.model,"destroy",this.removeTaskFromView),this.editButton=d({classNames:"btn btn-warning",id:"edit",text:'<span class="glyphicon glyphicon-pencil"></span>'}),this.deleteButton=d({classNames:"btn btn-danger",id:"delete",text:"delete"})},render:function(a){var b='<span class="bold">'+a+"</span>  ",c=this.model.get("title"),d='<input type="checkbox" >';this.model.get("done")&&(b='<span class="bold">'+a+"</span>  ",c='<strike style="color: #979797">'+this.model.get("title")+"</strike>",d='<input type="checkbox" checked >');var e=this.model.toJSON();e.badge=b,e.index=a,e.titleHtml=c,e.checkbox=d;var f=$(this.template).html(),g=Handlebars.compile(f),h=g(e);return this.$el.html(h),this.$el.css({width:"100%","float":"left",marginBottom:15,paddingLeft:0,listStyleType:"none",paddingTop:5,paddingBottom:5,margin:0}),this},editTask:function(){this.removeErrorMessage();var b=prompt("What would you like to change the text to?",this.model.get("title"));if(null!==b){if(!$.trim(b))return void this.throwError("Enter a title for the task");if(b.length<4)return void this.throwError("Task title is too short. Min 4 characters");this.model.set("title",b),this.model.set("modificationDate",a.Utils.getCurrentDateAndHour())}},deleteTaskFromCollection:function(){var a=confirm("Delete '"+this.model.get("title")+"' task.\nAre you sure?");a&&this.model.destroy()},removeTaskFromView:function(){this.$el.remove()},throwError:function(a){var b=(new e({classes:"alert alert-danger"}),'<div class="alert alert-danger" role="alert"><span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span><span class="sr-only">Error:</span>   '+a+"</div>");$("#errors").html(b)},removeErrorMessage:function(){$("#errors div").remove()},check:function(){this.model.set({done:!this.model.get("done")})}}),a.Views.Tasks=Backbone.View.extend({tagName:"ul",className:"list",initialize:function(){a.vent.on("tasks-list",this.render,this),this.listenTo(this.collection,"change",this.render),this.listenTo(this.collection,"add",this.addOne),this.listenTo(this.collection,"destroy",this.render)},render:function(){this.$el.html(""),this.collection.each(this.addOne,this),this.$el.css({paddingLeft:0}),this.saveToLocalStorage()},addOne:function(b,c){"object"==typeof c&&(c=this.collection.length-1);var d=new a.Views.Task({model:b});this.$el.append(d.render(c+1).el),localStorage.setItem(a.config.localStorageName,JSON.stringify(this.collection.toJSON()))},saveToLocalStorage:function(){localStorage.setItem(a.config.localStorageName,JSON.stringify(this.collection.toJSON())),this.checkIfTasks()},checkIfTasks:function(){if(0===this.collection.size()){var a="Currently you don't have tasks. Click on the top button to add a new task.";$(".myTasks .alert").length||($(".myTasks").prepend('<div class="alert alert-info" role="alert"><strong>Hey!</strong>'+a+"</div>"),$(".myTasks .list-header").addClass("hidden"))}}}),a.Views.AddTask=Backbone.View.extend({el:"#addTaskForm",initialize:function(){this.$el.css({paddingBottom:15})},events:{submit:"submit",'keydown input[type="text"]':"removeErrorMessage"},submit:function(b){b.preventDefault();var c=this.$el.find('input[type="text"]'),d=c.val(),e=this.$el.find("textarea");if(!$.trim(d))return this.throwError("Enter a title for the task"),void c.focus();if(this.removeErrorMessage(),d.length<4)return this.throwError("Task title is too short. Min 4 characters."),void c.focus();if($.trim(e.val()))var f=new a.Models.Task({title:d,description:e.val()});else var f=new a.Models.Task({title:d});f.set("creationDate",a.Utils.getCurrentDateAndHour()),this.collection.add(f),this.checkIfTasksOnAdd(),c.val("").focus(),e.val("")},throwError:function(a){var b='<div class="alert alert-danger" role="alert"><span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span><span class="sr-only">Error:</span>   '+a+"</div>";$("#errors").html(b)},removeErrorMessage:function(){$("#errors div").remove()},checkIfTasksOnAdd:function(){this.collection.size()>0&&$(".myTasks .alert").length&&($(".myTasks .alert").remove(),$(".myTasks .list-header").removeClass("hidden"))}}),a.Views.TaskDetails=Backbone.View.extend({el:"#detailsModal",events:{"click #editDescription":"editDescription","click #cancelDescriptionEdit":"setInitialModalState","click .close-details":"setInitialModalState","click #saveNewDescription":"saveNewDescription"},initialize:function(){a.vent.on("task-details:show",this.render,this),a.vent.on("task-details:hide",this.hideDetailsModal,this),a.vent.on("task-details:update:modificationDate",this.updateModificationDate,this)},render:function(a){var b=this.$el;b.find(".modal-title").text(this.getTask(a).get("title")),b.find(".modal-body .text").text(this.getTask(a).get("description")),b.find("textarea").val(this.getTask(a).get("description")),this.getTask(a).get("done")&&b.find("#editDescription").addClass("hidden"),b.find(".modal-footer .creation").text(this.getTask(a).getCreationString()),b.find(".modal-footer .modified").text(this.getTask(a).getModificationString()),b.modal("show")},hideDetailsModal:function(){$(this.$el).modal("hide")},getTask:function(a){return this.collection.at(a-1)},editDescription:function(a){var b=this.$el.find("textarea");b.removeClass("hidden").focus(),this.$el.find(".text").addClass("hidden"),$(a.currentTarget).addClass("hidden"),this.$el.find("#cancelDescriptionEdit, #saveNewDescription").removeClass("hidden")},setInitialModalState:function(){var a=this.$el.find("textarea");a.addClass("hidden"),a.val(this.$el.find(".text").text()),this.$el.find(".text").removeClass("hidden"),this.$el.find("#editDescription").removeClass("hidden"),this.$el.find("#cancelDescriptionEdit, #saveNewDescription").addClass("hidden")},saveNewDescription:function(){var b=this.$el.find("textarea").val(),c=this.$el.find(".text").text();$.trim(b)||(b="No description added.");var d=this.collection.findWhere({description:c});d.set("description",b),d.set("modificationDate",a.Utils.getCurrentDateAndHour()),a.vent.trigger("task-details:update:modificationDate",d),this.$el.find("textarea").addClass("hidden"),this.$el.find(".text").text(b).removeClass("hidden"),this.$el.find("#cancelDescriptionEdit, #saveNewDescription").addClass("hidden"),this.$el.find("#editDescription").removeClass("hidden")},updateModificationDate:function(a){this.$el.find(".modal-footer .modified").text(a.getModificationString())}}),null===localStorage.getItem(a.config.localStorageName)||void 0===localStorage.getItem(a.config.localStorageName)){var f=a.Utils.getCurrentDateAndHour();b=new a.Collections.Tasks([{title:"Learn Backbone.js",priority:6,done:!0,description:"Learn Backbone.js and all necesary functionalities to create a real-world JS App.",creationDate:f},{title:"Create a new TASK",priority:2,done:!1,description:"Use this app!",creationDate:f},{title:"Create first JS App",priority:3,done:!0,description:"Lorem ipsum etc etc...",creationDate:f}])}else c=JSON.parse(localStorage.getItem(a.config.localStorageName)),b=new a.Collections.Tasks(c);new a.Router.Tasks;var g=new a.Views.Tasks({collection:b});new a.Views.AddTask({collection:b});return g.render(),new a.Views.TaskDetails({collection:b}),$(".myTasks").append(g.el),Backbone.history.start(),a}();