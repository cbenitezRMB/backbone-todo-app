var App=function(){"use strict";var a,b,c={Models:{},Collections:{},Views:{},Router:{},vent:{},config:{localStorageName:"todosTest1"}},d=function(a){var b="",c={classNames:"btn",id:"myButton",text:"Button",type:"button"},d=function(){return b='<button type="'+c.type+'" class="'+c.classNames+'" id="'+c.id+'">'+c.text+"</button>"};if(a)for(var e in a)c.hasOwnProperty(e)&&(c[e]=a[e]);return d()},e=function(a){var b={tag:"div",id:"",classes:""};if(a)for(var c in a)b.hasOwnProperty(c)&&(b[c]=a[c]);var d=function(){var a=$("<"+b.tag+"><"+b.tag+"/>").attr("id",b.id).addClass(b.classes);return a};return d()};c.vent=_.extend({},Backbone.Events),c.Router.Tasks=Backbone.Router.extend({routes:{"":"home",home:"home","task-details/":"home","task-details/:taskId":"showTaskDetails","*notFound":"home"},home:function(){c.vent.trigger("tasks-list"),c.vent.trigger("task-details:hide")},showTaskDetails:function(a){c.vent.trigger("task-details:show",a)}}),c.Models.Task=Backbone.Model.extend({defaults:{title:"No title",priority:0,done:!1,description:"No description added"},url:"/data/tasks.json"}),c.Collections.Tasks=Backbone.Collection.extend({model:c.Models.Task,url:"data/tasks.json"}),c.Views.Task=Backbone.View.extend({tagName:"li",className:"col-sm-12",events:{"click #edit":"editTask","click #delete":"deleteTaskFromCollection",'click input[type="checkbox"]':"check"},template:"#individual-task",initialize:function(){this.listenTo(this.model,"change",this.render),this.listenTo(this.model,"destroy",this.removeTaskFromView),this.editButton=d({classNames:"btn btn-warning",id:"edit",text:'<span class="glyphicon glyphicon-pencil"></span>'}),this.deleteButton=d({classNames:"btn btn-danger",id:"delete",text:"delete"})},render:function(a){var b='<span class="badge" style="background-color: green;">'+a+"</span>  ",c=this.model.get("title"),d='<input type="checkbox" class="pull-left" >';this.model.get("done")&&(b='<span class="badge">'+a+"</span>  ",c='<strike style="color: #979797">'+this.model.get("title")+"</strike>",d='<input type="checkbox" class="pull-left" checked >');var e=this.model.toJSON();e.badge=b,e.index=a,e.titleHtml=c,e.checkbox=d;var f=$(this.template).html(),g=Handlebars.compile(f),h=g(e);return this.$el.html(h),this.$el.css({"float":"left",marginBottom:15,paddingLeft:0,listStyleType:"none"}),this},editTask:function(){this.removeErrorMessage();var a=prompt("What would you like to change the text to?",this.model.get("title"));if(null!==a)return $.trim(a)?a.length<4?void this.throwError("Task title is too short. Min 4 characters"):void this.model.set("title",a):void this.throwError("Enter a title for the task")},deleteTaskFromCollection:function(){var a=confirm("Delete '"+this.model.get("title")+"' task.\nAre you sure?");a&&this.model.destroy()},removeTaskFromView:function(){this.$el.remove(),c.vent.trigger("check:tasks-list")},throwError:function(a){var b=(new e({classes:"alert alert-danger"}),'<div class="alert alert-danger" role="alert"><span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span><span class="sr-only">Error:</span>   '+a+"</div>");$("#errors").html(b)},removeErrorMessage:function(){$("#errors div").remove()},check:function(){this.model.set({done:!this.model.get("done")})}}),c.Views.Tasks=Backbone.View.extend({tagName:"ul",initialize:function(){c.vent.on("tasks-list",this.render,this),this.listenTo(this.collection,"change",this.render),this.listenTo(this.collection,"add",this.addOne),this.listenTo(this.collection,"destroy",this.render)},render:function(){this.$el.html(""),this.collection.each(this.addOne,this),this.$el.css({paddingLeft:0}),this.saveToLocalStorage()},addOne:function(a,b){"object"==typeof b&&(b=this.collection.length-1);var d=new c.Views.Task({model:a});this.$el.append(d.render(b+1).el),localStorage.setItem(c.config.localStorageName,JSON.stringify(this.collection.toJSON()))},saveToLocalStorage:function(){localStorage.setItem(c.config.localStorageName,JSON.stringify(this.collection.toJSON())),this.checkIfTasks()},checkIfTasks:function(){if(0===this.collection.size()){var a="Currently you don't have tasks. Click on the top button to add a new task.";$(".myTasks .alert").length||$(".myTasks").prepend('<div class="alert alert-info" role="alert"><strong>Hey!</strong>'+a+"</div>")}}}),c.Views.AddTask=Backbone.View.extend({el:"#addTaskForm",initialize:function(){this.$el.css({paddingBottom:15})},events:{submit:"submit",'keydown input[type="text"]':"removeErrorMessage"},submit:function(a){a.preventDefault();var b=this.$el.find('input[type="text"]'),d=b.val(),e=this.$el.find("textarea");if(!$.trim(d))return this.throwError("Enter a title for the task"),void b.focus();if(this.removeErrorMessage(),d.length<4)return this.throwError("Task title is too short. Min 4 characters."),void b.focus();if($.trim(e.val()))var f=new c.Models.Task({title:d,description:e.val()});else var f=new c.Models.Task({title:d});this.collection.add(f),this.checkIfTasksOnAdd(),b.val("").focus(),e.val("")},throwError:function(a){var b='<div class="alert alert-danger" role="alert"><span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span><span class="sr-only">Error:</span>   '+a+"</div>";$("#errors").html(b)},removeErrorMessage:function(){$("#errors div").remove()},checkIfTasksOnAdd:function(){this.collection.size()>0&&$(".myTasks .alert").length&&$(".myTasks .alert").remove()}}),c.Views.TaskDetails=Backbone.View.extend({el:"#detailsModal",events:{"click #editDescription":"editDescription","click #cancelDescriptionEdit":"setInitialModalState","click .close-details":"setInitialModalState","click #saveNewDescription":"saveNewDescription"},initialize:function(){c.vent.on("task-details:show",this.render,this),c.vent.on("task-details:hide",this.hideDetailsModal,this)},render:function(a){var b=this.$el;b.find(".modal-title").text(this.getTask(a).get("title")),b.find(".modal-body .text").text(this.getTask(a).get("description")),b.find("textarea").val(this.getTask(a).get("description")),this.getTask(a).get("done")&&b.find("#editDescription").addClass("hidden"),b.modal("show")},hideDetailsModal:function(){$(this.$el).modal("hide")},getTask:function(a){return this.collection.at(a-1)},editDescription:function(a){var b=this.$el.find("textarea");b.removeClass("hidden").focus(),this.$el.find(".text").addClass("hidden"),$(a.currentTarget).addClass("hidden"),this.$el.find("#cancelDescriptionEdit, #saveNewDescription").removeClass("hidden")},setInitialModalState:function(){var a=this.$el.find("textarea");a.addClass("hidden"),a.val(this.$el.find(".text").text()),this.$el.find(".text").removeClass("hidden"),this.$el.find("#editDescription").removeClass("hidden"),this.$el.find("#cancelDescriptionEdit, #saveNewDescription").addClass("hidden")},saveNewDescription:function(){var a=this.$el.find("textarea").val(),b=this.$el.find(".text").text();$.trim(a)||(a="No description added.");var c=this.collection.findWhere({description:b});c.set("description",a),this.$el.find("textarea").addClass("hidden"),this.$el.find(".text").text(a).removeClass("hidden"),this.$el.find("#cancelDescriptionEdit, #saveNewDescription").addClass("hidden"),this.$el.find("#editDescription").removeClass("hidden")}}),null===localStorage.getItem(c.config.localStorageName)||void 0===localStorage.getItem(c.config.localStorageName)?a=new c.Collections.Tasks([{title:"Learn Backbone.js",priority:2,description:"Learn Backbone.js and all necesary functionalities to create a real-world JS App."},{title:'Add "Mark as done" functionality.',priority:2,done:!0,description:"The task must change its styles when the checkbox is clicked"},{title:"Create first JS App",priority:3,done:!0,description:"Lorem ipsum etc etc..."},{title:"Take a look at routes",priority:5},{title:"Validate forms in Backbone using a View",priority:5}]):(b=JSON.parse(localStorage.getItem(c.config.localStorageName)),a=new c.Collections.Tasks(b)),new c.Router.Tasks;var f=new c.Views.Tasks({collection:a});new c.Views.AddTask({collection:a});return f.render(),new c.Views.TaskDetails({collection:a}),$(".myTasks").append(f.el),Backbone.history.start(),c}();